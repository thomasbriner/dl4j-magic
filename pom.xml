<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ch.ergon.ml</groupId>
	<artifactId>dl4j-magic</artifactId>
	<version>0.0.1-SNAPSHOT</version>


	<packaging>jar</packaging>

	<name>deeplearning-bt</name>
	<url>http://maven.apache.org</url>

	<properties>

		<!-- Change the nd4j.backend property to nd4j-cuda-7.5-platform or nd4j-cuda-8.0-platform 
			to use CUDA GPUs -->
		<nd4j.backend>nd4j-native-platform</nd4j.backend>
		<!-- <nd4j.backend>nd4j-cuda-8.0-platform</nd4j.backend> -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<shadedClassifier>bin</shadedClassifier>


		<java.version>1.8</java.version>
		<nd4j.version>0.8.0</nd4j.version>
		<dl4j.version>0.8.0</dl4j.version>
		<datavec.version>0.8.0</datavec.version>
		<arbiter.version>0.8.0</arbiter.version>
		<rl4j.version>0.8.0</rl4j.version>
		<jackson.version>2.6.6</jackson.version>

		<jfreechart.version>1.0.13</jfreechart.version>
		<jcommon.version>1.0.23</jcommon.version>


		<!-- For Spark examples: change the _1 to _2 to switch between Spark 1 
			and Spark 2 -->
		<dl4j.spark.version>0.8.0_spark_1</dl4j.spark.version>
		<datavec.spark.version>0.8.0_spark_1</datavec.spark.version>



		<canova.version>0.0.0.17</canova.version>

	</properties>
	<!-- Platform-dependent backend selection (netlib is default) -->
	<profiles>
		<profile>
			<id>cuda</id>
			<dependencies>
				<dependency>
					<groupId>org.nd4j</groupId>
					<artifactId>nd4j-jcublas-${cuda.version}</artifactId>
					<version>${nd4j.version}</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>netlib</id>
			<dependencies>
				<dependency>
					<groupId>org.nd4j</groupId>
					<artifactId>nd4j-native</artifactId>
					<version>${nd4j.version}</version>
				</dependency>
			</dependencies>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
	</profiles>
	<!-- end platform-dependent backend selection -->

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.nd4j</groupId>
				<artifactId>nd4j-native-platform</artifactId>
				<version>${nd4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nd4j</groupId>
				<artifactId>nd4j-cuda-7.5-platform</artifactId>
				<version>${nd4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nd4j</groupId>
				<artifactId>nd4j-cuda-8.0-platform</artifactId>
				<version>${nd4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nd4j</groupId>
				<artifactId>nd4j-jblas</artifactId>
				<version>${nd4j.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.deeplearning4j</groupId>
				<artifactId>deeplearning4j-core</artifactId>
				<version>${dl4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.deeplearning4j</groupId>
				<artifactId>deeplearning4j-ui</artifactId>
				<version>${dl4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.deeplearning4j</groupId>
				<artifactId>deeplearning4j-scaleout-api</artifactId>
				<version>${dl4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.deeplearning4j</groupId>
				<artifactId>deeplearning4j-scaleout-akka</artifactId>
				<version>${dl4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.deeplearning4j</groupId>
				<artifactId>deeplearning4j-scaleout-zookeeper</artifactId>
				<version>${dl4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.deeplearning4j</groupId>
				<artifactId>deeplearning4j-nlp</artifactId>
				<version>${dl4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.deeplearning4j</groupId>
				<artifactId>deeplearning4j-aws</artifactId>
				<version>${dl4j.version}</version>
			</dependency>
			<!-- end dl4j dependencies -->

			<!-- nd4j dependencies -->
			<dependency>
				<groupId>org.nd4j</groupId>
				<artifactId>canova-nd4j-image</artifactId>
				<version>${canova.version}</version>
			</dependency>
			<dependency>
				<groupId>org.nd4j</groupId>
				<artifactId>canova-nd4j-codec</artifactId>
				<version>${canova.version}</version>
			</dependency>
			<!-- end nd4j dependencies -->

			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-yaml</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>net.java.openjfx.backport</groupId>
				<artifactId>openjfx-78-backport</artifactId>
				<version>1.8.0-ea-b96.1</version>
			</dependency>


			<!-- <dependency> -->
			<!-- <groupId>org.slf4j</groupId> -->
			<!-- <artifactId>slf4j-log4j12</artifactId> -->
			<!-- <version>1.7.13</version> -->
			<!-- </dependency> -->


			<dependency>
				<groupId>org.apache.maven.reporting</groupId>
				<artifactId>maven-reporting-api</artifactId>
				<version>2.2.1</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>deeplearning4j-ui</artifactId>
			<version>0.6.0</version>

			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>log4j-over-slf4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>deeplearning4j-nlp</artifactId>
			<version>${dl4j.version}</version>

		</dependency>
		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>deeplearning4j-core</artifactId>
			<version>${dl4j.version}</version>

		</dependency>
		<!-- <dependency> <artifactId>canova-nd4j-image</artifactId> <groupId>org.nd4j</groupId> 
			<version>${canova.version}</version> </dependency> -->
		<!-- https://mvnrepository.com/artifact/org.datavec/datavec-api -->
		<dependency>
			<groupId>org.datavec</groupId>
			<artifactId>datavec-api</artifactId>
			<version>0.8.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.datavec/datavec-spark_2.11 -->
		<dependency>
			<groupId>org.datavec</groupId>
			<artifactId>datavec-spark_2.11</artifactId>
			<version>0.8.0_spark_1</version>
		</dependency>
		<dependency>
			<groupId>jfree</groupId>
			<artifactId>jfreechart</artifactId>
			<version>${jfreechart.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>jcommon</artifactId>
			<version>${jcommon.version}</version>
		</dependency>

	</dependencies>

	<build>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>1.6</version>
				<configuration>
					<createDependencyReducedPom>true</createDependencyReducedPom>
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>org/datanucleus/**</exclude>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
							</excludes>
						</filter>
					</filters>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>reference.conf</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
